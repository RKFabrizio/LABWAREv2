
@{
    ViewData["Title"] = "TablaMuestra";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .user-icon-container {
        display: flex;
        align-items: center;
        margin-left: 30px;
    }

        .user-icon-container .icon-tabler {
            margin-right: 10px;
            width: 50px;
            height: 50px;
        }

        .user-icon-container .page-title {
            margin-left: -4px;
            color: #a79a66;
        }

        .user-icon-container .page-title-home {
            margin-left: -4px;
            color: #a79a66;
        }

    .page-title-home {
        margin-top: 18px;
    }

</style>

@section PagePreTitle {

    <div class="col">
        <!-- Page pre-title -->
        <div class="user-icon-container">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-color-picker" width="44" height="44" viewBox="0 0 24 24" stroke-width="1.5" stroke="#a79a66" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                <path d="M11 7l6 6" />
                <path d="M4 16l11.7 -11.7a1 1 0 0 1 1.4 0l2.6 2.6a1 1 0 0 1 0 1.4l-11.7 11.7h-4v-4z" />
            </svg>

            <h2 class="page-title-home">
                Historial de Muestras
            </h2>
        </div>
    </div>


}

@section PageActions {


}

@(Html.DevExtreme().DataGrid<LBW.Models.Entity.Muestra>()
    .DataSource(ds => ds.Mvc()
        .Controller("Muestras")
        .LoadAction("Get")
        .Key("IdSample")
        
    )
     .FilterRow(filterRow => filterRow
        .Visible(true)
        .ApplyFilter(GridApplyFilterMode.Auto)
    )
    .SearchPanel(searchPanel => searchPanel
        .Visible(true)
        .Width(240)
        .Placeholder("Search...")
    )
    .HeaderFilter(headerFilter => headerFilter.Visible(true).Width(400))
    .Scrolling(scrolling => scrolling.ColumnRenderingMode(GridColumnRenderingMode.Virtual))
    .ColumnAutoWidth(true)
    .RemoteOperations(true)
    .Columns(columns => {

        columns.AddFor(m => m.Fecha).Caption("Fecha");

        columns.AddFor(m => m.IdPm).Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Muestras").LoadAction("PuntoMuestrasLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
        ).Caption("Punto de Muestra");

        columns.AddFor(m => m.IdCliente).Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Muestras").LoadAction("ClientesLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
        ).Caption("Cliente").GroupIndex(0);

        columns.AddFor(m => m.IdLocation).Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Muestras").LoadAction("UbicacionesLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
        ).Caption("Locación");

        columns.AddFor(m => m.SampleNumber).Caption("Nro de Muestras"); ;

        columns.AddFor(m => m.TextID).Caption("Muestra");

        columns.AddFor(m => m.Status).Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Muestras").LoadAction("ListasLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
        );


        columns.AddFor(m => m.IdGrado).Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Muestras").LoadAction("GradosLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
        ).Caption("Grado");


        columns.AddFor(m => m.SampleType).Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Muestras").LoadAction("ListasTipoMuestraLookup").Key("value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
        ).Caption("Tipo de muestras");

        columns.AddFor(m => m.IdProject).Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Muestras").LoadAction("ProyectosLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
        ).Caption("Proyecto");


        columns.AddFor(m => m.IdPlanta).Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Muestras").LoadAction("PlantasLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
        ).Caption("Planta");

        columns.AddFor(m => m.ConteoPuntos).Caption("Conteo de Puntos");
    })
)

