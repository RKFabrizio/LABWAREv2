
@{
    ViewData["Title"] = "Analisis";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    .user-icon-container {
        display: flex;
        align-items: center;
        margin-left: 30px;
    }

        .user-icon-container .icon-tabler {
            margin-right: 10px;
            width: 50px;
            height: 50px;
        }

        .user-icon-container .page-title {
            margin-left: -4px;
            color: #a79a66;
        }

        .user-icon-container .page-title-home {
            margin-left: -4px;
            color: #a79a66;
        }

    .page-title-home {
        margin-top: 18px;
    }

</style>

@section PagePreTitle {


    <div class="col">
        <!-- Page pre-title -->
        <div class="user-icon-container">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-analyze" width="44" height="44" viewBox="0 0 24 24" stroke-width="1.5" stroke="#A79A66" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                <path d="M20 11a8.1 8.1 0 0 0 -6.986 -6.918a8.095 8.095 0 0 0 -8.019 3.918" />
                <path d="M4 13a8.1 8.1 0 0 0 15 3" />
                <path d="M19 16m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
                <path d="M5 8m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0" />
                <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
            </svg>
            <h2 class="page-title-home">
                Análisis/Resultados
            </h2>
        </div>
    </div>

}

@section PageActions {
    <div id="popupcontainer" style="width: 300px;">
        <div id="formcontainer" style="width: 300px; margin: 20px auto;">
            <form id="dateform">
                <div>
                    <label for="startdate">fecha de inicio:</label>
                    <div id="startdatebox"></div>
                </div>
                <div>
                    <label for="enddate">fecha de fin:</label>
                    <div id="enddatebox"></div>
                </div>
            </form>
        </div>
        <div style="height: 100px;"></div>
        <div style="text-align: center; margin-top: 10px;">
            <button id="selectbutton"></button>
        </div>
    </div>

}

 @(Html.DevExtreme().DataGrid<LBW.Models.Entity.Proyecto>()
    .DataSource(ds => ds.Mvc()
        .Controller("Proyectoes")
        .LoadAction("Get")
        .Key("IdProyecto")
    )
    .RemoteOperations(true)
    .Columns(columns => {

        columns.AddFor(m => m.IdProyecto);

        columns.AddFor(m => m.ID_TL).Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Proyectoes").LoadAction("PlantillasLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
        );

        columns.AddFor(m => m.ID_Cliente).Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Proyectoes").LoadAction("ClientesLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
        );

        columns.AddFor(m => m.Name);

        columns.AddFor(m => m.TemplateVersion);

        columns.AddFor(m => m.Description);

        columns.AddFor(m => m.Note);

        columns.AddFor(m => m.Status).Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Proyectoes").LoadAction("ListasLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
        );

        columns.AddFor(m => m.DateCreated);

        columns.AddFor(m => m.DateRecieved);

        columns.AddFor(m => m.DateStarted);

        columns.AddFor(m => m.DateCompleted);

        columns.AddFor(m => m.DateReviewed);

        columns.AddFor(m => m.DateUpdated);

        columns.AddFor(m => m.Owner).Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Proyectoes").LoadAction("UsuariosLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
        );

        columns.AddFor(m => m.NumSamples);
    })
)
 
 

<script>

    $(function () {
        var popupInstance = $("#popupContainer").dxPopup({
            title: "Filtrar Proyectos",
            maxWidth: 500,
            visible: true,
            onHidden: function (e) {
                console.log("Pop-up cerrado");
            }
        }).dxPopup("instance");

        $("#selectButton").dxButton({
            stylingMode: "contained",
            text: "Enviar",
            type: "default",
            width: 120,
            onClick: function (e) {


                // Obtener las fechas seleccionadas en formato dd/MM/yyyy
                var startDateBox = $("#startDateBox").dxDateBox("instance");
                var endDateBox = $("#endDateBox").dxDateBox("instance");

                startDate = formatDate(startDateBox.option("value"), 'MM-dd-yyyy');
                endDate = formatDate(endDateBox.option("value"), 'MM-dd-yyyy');

                console.log(estado);


                // Realizar la solicitud AJAX al controlador
                $.ajax({
                    url: '@Url.Action("GetByFilter", "Proyectoes")',
                    method: "GET",
                    async: false,
                    data: {
                        StartDate: startDate,
                        EndDate: endDate
                    },
                    success: function (result) {
                        console.log(result);
                        // Manejar la respuesta del controlador, por ejemplo, actualizar el DataGrid
                        var dataGrid = $("#gridContainer").dxDataGrid("instance");
                        dataGrid.option("dataSource", result);
                    },
                    error: function (error) {
                        console.error("Error al obtener los datos filtrados:", error);
                    }
                });

                popupInstance.hide();
            },
            elementAttr: {
                style: "text-align: center; line-height: normal;"
            }
        });

        // Inicializar dateBoxes
        $("#startDateBox").dxDateBox({
            type: "date",
            value: new Date(),
            onValueChanged: function (e) {
                startDate = e.value;
            }
        });

        $("#endDateBox").dxDateBox({
            type: "date",
            value: new Date(),
            onValueChanged: function (e) {
                endDate = e.value;
            }
        });

    });

</script>