
@{
    ViewData["Title"] = "TablaComponente";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .user-icon-container {
        display: flex;
        align-items: center;
        margin-left: 30px;
    }

        .user-icon-container .icon-tabler {
            margin-right: 10px;
            width: 50px;
            height: 50px;
        }

        .user-icon-container .page-title {
            margin-left: -4px;
            color: #a79a66;
        }

        .user-icon-container .page-title-home {
            margin-left: -4px;
            color: #a79a66;
        }

    .page-title-home {
        margin-top: 18px;
    }

</style>

@section PagePreTitle {

    <div class="col">
        <!-- Page pre-title -->
        <div class="user-icon-container">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-components" width="44" height="44" viewBox="0 0 24 24" stroke-width="1.5" stroke="#a79a66" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                <path d="M3 12l3 3l3 -3l-3 -3z" />
                <path d="M15 12l3 3l3 -3l-3 -3z" />
                <path d="M9 6l3 3l3 -3l-3 -3z" />
                <path d="M9 18l3 3l3 -3l-3 -3z" />
            </svg>
 

            <h2 class="page-title-home">
                Gestionar Componentes
            </h2>
        </div>
    </div>


}

@section PageActions {


}

@(Html.DevExtreme().DataGrid<LBW.Models.Entity.AnalisisDetalle>()
    .DataSource(ds => ds.Mvc()
        .Controller("AnalisisDetalles")
        .UpdateAction("Put")
        .LoadAction("Get1")
        .Key("IdComp")
    )
    .FilterRow(filterRow => filterRow
        .Visible(true)
        .ApplyFilter(GridApplyFilterMode.Auto)
    )
     .HeaderFilter(headerFilter => headerFilter.Visible(true).Width(400))
    .Paging(paging => paging.PageSize(10))
    .Pager(pager =>
    {
        pager.Visible(true);
        pager.DisplayMode(GridPagerDisplayMode.Full);
        pager.ShowPageSizeSelector(true);
        pager.AllowedPageSizes(new JS("[5, 10, 'all']"));
        pager.ShowInfo(true);
        pager.ShowNavigationButtons(true);
    })

    .ShowBorders(true)
    .RemoteOperations(true)
    .Editing(e => e.Mode(GridEditMode.Popup)
            .AllowUpdating(true)
            .UseIcons(true)
            .Popup(p => p
                .Title("Gestionar Componentes")
                .ShowTitle(true)
                .Width(700)
                .Height(425)
            )
            .Form(f => f.Items(items =>
            {
                items.AddGroup()
                    .ColCount(2)
                    .ColSpan(2)
                    .Items(groupItems =>
                    {
                        groupItems.AddSimpleFor(m => m.IdAnalisis);
                        groupItems.AddSimpleFor(m => m.IdUnidad);
                        groupItems.AddSimpleFor(m => m.NameComponent);
                        groupItems.AddSimpleFor(m => m.Reportable);
                        groupItems.AddSimpleFor(m => m.ClampLow);
                        groupItems.AddSimpleFor(m => m.ClampHigh);
                         
                    });


            }))
        )
    .Columns(columns => {

        columns.AddFor(m => m.IdAnalisis).Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("AnalisisDetalles").LoadAction("AnalisissLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
        ).Caption("Análisis").AllowEditing(false);

        columns.AddFor(m => m.IdUnidad).Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("AnalisisDetalles").LoadAction("UnidadesLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
        ).Caption("Unidad").AllowEditing(false);

        columns.AddFor(m => m.NameComponent).Caption("Componente").AllowEditing(false);

        columns.AddFor(m => m.Version).Caption("Versión");

        columns.AddFor(m => m.Reportable);

        columns.AddFor(m => m.ClampLow);

        columns.AddFor(m => m.ClampHigh);
    })
)