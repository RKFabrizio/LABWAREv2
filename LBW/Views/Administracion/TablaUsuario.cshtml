
@{
    ViewData["Title"] = "TablaUsuario";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .user-icon-container {
        display: flex;
        align-items: center;
        margin-left: 30px;
    }

        .user-icon-container .icon-tabler {
            margin-right: 10px;
            width: 50px;
            height: 50px;
        }

        .user-icon-container .page-title {
            margin-left: -4px;
            color: #a79a66;
        }

        .user-icon-container .page-title-home {
            margin-left: -4px;
            color: #a79a66;
        }

    .page-title-home {
        margin-top: 18px;
    }

</style>

@section PagePreTitle {

    <div class="col">
        <!-- Page pre-title -->
        <div class="user-icon-container">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-user-cog" width="44" height="44" viewBox="0 0 24 24" stroke-width="1.5" stroke="#a79a66" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" />
                <path d="M6 21v-2a4 4 0 0 1 4 -4h2.5" />
                <path d="M19.001 19m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0" />
                <path d="M19.001 15.5v1.5" />
                <path d="M19.001 21v1.5" />
                <path d="M22.032 17.25l-1.299 .75" />
                <path d="M17.27 20l-1.3 .75" />
                <path d="M15.97 17.25l1.3 .75" />
                <path d="M20.733 20l1.3 .75" />
            </svg>

            <h2 class="page-title-home">
                Gestionar Usuarios
            </h2>
        </div>
    </div>


}

@section PageActions {


}

@(Html.DevExtreme().DataGrid<LBW.Models.Entity.Usuario>()
    .DataSource(ds => ds.Mvc()
        .Controller("Usuarios")
        .LoadAction("Get")
        .InsertAction("Post")
        .UpdateAction("Put")
        .Key("UsuarioID")
    )
    .ShowBorders(true)
    .Paging(paging => paging.PageSize(10))
    .Pager(pager =>
    {
        pager.Visible(true);
        pager.DisplayMode(GridPagerDisplayMode.Full);
        pager.ShowPageSizeSelector(true);
        pager.AllowedPageSizes(new JS("[5, 10, 'all']"));
        pager.ShowInfo(true);
        pager.ShowNavigationButtons(true);
    })
 
    .FilterRow(f => f.Visible(true))
    .RemoteOperations(true)
    .Columns(columns =>
    {

        columns.AddFor(m => m.NombreCompleto).Caption("Nombre");
        columns.AddFor(m => m.UsuarioID).Caption("Username");
        columns.AddFor(m => m.Password)
            .Caption("Contraseña")
            .Visible(false);
        columns.AddFor(m => m.Correo).Caption("Correo");
        columns.AddFor(m => m.IdRol).Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Usuarios").LoadAction("RolLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
            ).Caption("Rol");
        columns.AddFor(m => m.UsuarioDeshabilitado).Caption("Inactivo");
        columns.AddFor(m => m.CCliente).Lookup(lookup => lookup
            .DataSource(ds => ds.WebApi().Controller("Usuarios").LoadAction("CCLookup").Key("Value"))
            .ValueExpr("Value")
            .DisplayExpr("Text")
            ).Caption("Cliente");
        columns.AddFor(m => m.ConCopia).Visible(false);


    })
   .Editing(e => e.Mode(GridEditMode.Popup)
            .AllowUpdating(true)
            .AllowAdding(true)
            .UseIcons(true)
            .Popup(p => p
                .Title("Gestión Usuario")
                .ShowTitle(true)
                .Width(800)
                .Height(350)
            )
            .Form(f => f.Items(items =>
            {
                items.AddGroup()
                    .ColCount(2)
                    .ColSpan(2)
                    .Items(groupItems =>
                    {
                        groupItems.AddSimpleFor(m => m.NombreCompleto);
                        groupItems.AddSimpleFor(m => m.UsuarioID)
                            .Editor(editor => editor.TextBox()
                                .OnValueChanged("function(e) { e.component.option('value', e.value.toUpperCase()); }")
                            );
                        groupItems.AddSimple()

                        .Editor(editor => editor.TextBox()
                            .Mode(TextBoxMode.Password)
                        )
                        .DataField("Password");
                        groupItems.AddSimpleFor(m => m.IdRol);
                        groupItems.AddSimpleFor(m => m.Correo);
                        groupItems.AddSimpleFor(m => m.CCliente);
                        groupItems.AddSimpleFor(m => m.ConCopia);
                        groupItems.AddSimpleFor(m => m.UsuarioDeshabilitado);
                    });

            }))
        )
)

